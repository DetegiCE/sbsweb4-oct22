상품 정보를 저장하는 객체 생성자 함수 만들기

상품정보 함수
- 상품 코드
- 상품명
- 상품 가격
- 상품 이미지 -> 코드로 자동 생성

기능
- 버튼을 클릭했을 때 상품의 이미지와 가격정보가 HTML로 나오도록

버튼
button onclick -> 상품정보 함수의 기능 실행되서 정보가 나옴


제이쿼리 (j + Query)
자바스크립트의 라이브러리 언어

자바스크립트 -> 제이쿼리
- 호환성 문제 (DOM, 객체)
- 애니메이션 구현
- **더 짧은 코드**


제이쿼리 사용하기
 
1. 네트워크 방식 (용량이 줄어듬)
https://code.jquery.com/jquery-3.4.0.min.js
jquery 코드를 인터넷에서 가져와서 사용한다

2. 다운로드 방식 (속도가 줄어듬)
제이쿼리 파일을 직접 다운로드 받아서 적용하는 방식
-> cdnjs.com 접속 -> 가운데 검색창에 jquery 검색 -> min.js, js 파일
- jquery.js -> 들여쓰기, 줄바꿈, 주석이 달린 실제 jquery 파일 
- jquery.min.js -> min(최소화) -> 들여쓰기, 줄바꿈 하나도 X, 주석X, 변수 전부 최적화, 소스가 압축되어 있음 -> 로딩 빠름, 용량 jquery.js 대비 1/4 크기

일반적인 프론트 개발자는 jquery.min.js사용
jquery.js는 제이쿼리 개발자

jquery.min.js 링크로 들어가서 우클릭 -> 다른 이름으로 저장 -> js 폴더 아래에 끌어다놓기

$() -> 선택자
선택자 내부에 css 선택자를 넣어서 스타일을 결정해주는 방식 -> 직접 선택자

인접 선택자
$(CSS 선택자).~~~();
parent() -> 바로 위 부모
parents() -> 모든 부모
closest(선택자) -> 부모 중 가장 가까운 선택자
<div>
  <div>
    <div> --> $("#a).closest("div");
      <div id="a">

<div>
  <div>  --> $("#a).closest("div");
    <p>
      <div id = "a">
children() -> 모든 자식
prev() -> 바로 이전 요소
prevAll() -> 모든 이전 요소
prevUntil(선택자) -> 선택자부터 나까지의 이전 요소
next()
nextAll()
nextUntil(선택자)
siblings() -> 나와 같은 층의 요소

위치 탐색 선택자
nth-child(숫자)
odd
even
nth-of-type(숫자)
first
last
eq -> 정확히 몇번
lt -> 앞에서 몇개
gt -> 뒤에서 몇개
(equal, less than, greater than)
slice -> 가운데에서 몇개 (몇번째~몇번째)

1. 7개짜리 리스트 만들어서 홀수번째에만 빨간색 칠하기

2. 3개짜리 리스트 만들어서 마지막 1개에만 노란색 칠하기 (2가지 방식)

3. 5개짜리 리스트 만들어서 앞에서 4개만 초록색 칠하기 (2가지 방식)


제이쿼리 배열 관련 함수
$(선택자).each(함수) / $.each($(선택자), 함수)

배열에 저장된 값을 차례로 순서대로 하나씩 순회하면서 인덱스의 정보를 가져옴

each 내부에 함수를 넣을때는 앞의 값은 인덱스 번호, 뒤의 값을 가져옴


$.map(배열(선택자), 함수)

배열에 들어있는 값에 대해서 함수가 실행이 된다

map 내부에 함수를 넣을 떄는 앞의 값은 값, 뒤의 값은 인덱스를 가져옴

배열에 있는 각각의 요소에 대해서 함수를 적용하고, 적용한 값들을 새롭게 배열로 저장한다


$.grep(배열(선택자), 함수)

배열에 들어있는 값에 대해서 함수 실행이 됨
-> 이 함수의 반환 값이 true 또는 false 여야 함
true 인 경우에 대해서만 새롭게 배열에 추가가 되고, 인덱스 오름차순으로 저장이 됨



